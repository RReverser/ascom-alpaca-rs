[package]
name = "ascom-alpaca"
version = "1.0.0-beta"
edition = "2021"
authors = ["Ingvar Stepanyan <me@rreverser.com>"]
categories = ["api-bindings", "science", "hardware-support"]
keywords = ["ascom", "alpaca", "astronomy", "astrophotography"]
description = "Rust implementation of the ASCOM Alpaca API for astronomy devices"
repository = "https://github.com/RReverser/ascom-alpaca-rs"
license = "MIT OR Apache-2.0"

[dependencies]
async-fn-stream = "0.2.0"
async-trait = "0.1.64"
axum = { version = "0.6.11", optional = true, features = ["headers"] }
bytemuck = { version = "1.13.0", features = ["derive", "extern_crate_std"], optional = true }
bytes = { version = "1.4.0", optional = true }
custom_debug = "0.5.1"
default-net = "0.14.1"
eyre = "0.6.8"
futures = "0.3.26"
indexmap = { version = "1.9.2", features = ["serde"] }
macro_rules_attribute = "0.2.0"
mediatype = { version = "0.19.11", optional = true }
mime = { version = "0.3.16", optional = true }
ndarray = { version = "0.15.6", optional = true }
net-literals = "0.2.0"
num_enum = "0.6.1"
once_cell = { version = "1.17.1", optional = true }
rand = { version = "0.8.5", optional = true }
reqwest = { version = "0.11.14", optional = true, default-features = false, features = ["json"] }
sailfish = { version = "0.6.1", optional = true }
serde = { version = "1.0.145", features = ["derive", "rc"] }
serde-ndim = { version = "1.1.0", optional = true, features = ["ndarray"] }
serde_json = { version = "1.0.86" }
serde_plain = "1.0.1"
serde_repr = "0.1.9"
socket2 = "0.5.1"
thiserror = "1.0.37"
time = { version = "0.3.20", features = ["formatting", "parsing", "macros"] }
tokio = { version = "1.25.0", features = ["net", "rt"] }
tracing = "0.1.37"
tracing-futures = { version = "0.2.5", features = ["futures-03"] }

[target.'cfg(windows)'.dependencies]
windows-sys = { version = "0.48.0", features = ["Win32_Networking_WinSock"] }

[dev-dependencies]
ascom-alpaca = { path = ".", features = ["test"] }
bayer = "0.1.5"
criterion = { version = "0.4.0", features = ["async_tokio"] }
ctor = "0.2.0"
eframe = "0.21.3"
# apparently Cargo doesn't allow `test` to enable `ndarray/rayon` when `ndarray` is an optional dependency
# hence the duplicate dep with rayon feature
ndarray = { version = "0.15.6", features = ["rayon"] }
nokhwa = { version = "0.10.3", features = ["input-native", "output-threaded"] }
parking_lot = { version = "0.12.1", features = ["arc_lock", "send_guard"] }
serial_test = "2.0.0"
time = { version = "0.3.20", features = ["formatting"] }
tracing-subscriber = "0.3.16"
tracing-error = "0.2.0"
color-eyre = "0.6.2"
tracing-forest = { version = "0.1.5", features = ["ansi"] }

[[bench]]
name = "image_array"
harness = false

[features]
all-devices = ["camera", "covercalibrator", "dome", "filterwheel", "focuser", "observingconditions", "rotator", "safetymonitor", "switch", "telescope"]

camera = ["dep:mediatype", "dep:bytemuck", "dep:ndarray", "dep:serde-ndim"]
covercalibrator = []
dome = []
filterwheel = []
focuser = []
observingconditions = []
rotator = []
safetymonitor = []
switch = []
telescope = []

client = ["dep:reqwest", "dep:bytes", "dep:mime", "dep:rand", "dep:once_cell"]
server = ["dep:axum", "dep:sailfish", "tokio/macros"]

test = ["client", "server", "camera", "tokio/macros", "tokio/rt-multi-thread"]

nightly = []

[package.metadata.docs.rs]
all-features = true

[patch.crates-io]
tracing-forest = { git = "https://github.com/QnnOkabayashi/tracing-forest" }
